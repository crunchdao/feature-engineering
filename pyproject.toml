# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0, <1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "feature-engineering"
version = "0.1.0"
description = "From dataset to features."
readme = "README.md"
authors = ["CrunchDAO"]
repository = "https://github.com/crunchdao/feature-engineering"
homepage = "https://github.com/crunchdao/feature-engineering"
packages = [
    { include = "fengi" },
]

[tool.poetry.dependencies]
python = "^3.9"
pandas = { version = ">=1.5, <2.1"}
tqdm =  { version = ">=4.48.0, <4.65.0"}
numpy = { version = ">=1.23.0, <1.25.0"}
matplotlib = { version = ">=3.6.0, <3.7.0"}
seaborn = { version = ">=0.10.0, <0.12.0"}
scipy = { version = ">=1.10.0, <1.11.1"}
scikit-learn = { version = ">=1.1.0, <1.2.0"}
pyarrow = { version = ">=10.0.1, <12.0.1"}
pandarallel = { version = ">=1.6.1, <1.6.4"}

[tool.poetry.dev-dependencies]
bandit = { version = ">=1.7.0, <1.7.4"}
black = { version = ">=23.1.0, <23.3.0"}
darglint = { version = ">=1.7.0, <1.8.1"}
isort = {extras = ["colors"], version = ">=5.11.0, <5.12.0"}
mypy = { version = ">=0.910, <1.4.0"}
mypy-extensions = { version = ">=0.4.0, <1.0.0"}
pre-commit = { version = ">=3.0.0, <3.3.0"}
pydocstyle = { version = ">=6.0, <6.2.2"}
pylint = { version = ">=2.12, <2.17.2"}
pytest = { version = ">=7.1.0, <7.3.0"}
pyupgrade = { version = ">=3.2.0, <3.5.0"}
safety = { version = ">=2.3.0, <2.3.5"}
coverage-badge = { version = ">=1.0.0, <1.1.0"}

[tool.black]
# https://github.com/psf/black
target-version = ["py37"]
line-length = 110
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 37
line_length = 110

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]
